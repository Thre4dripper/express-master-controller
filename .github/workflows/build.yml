name: Version Check and Publish

on:
  push:
    branches:
      - main

jobs:
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      should_update: ${{ steps.compare_versions.outputs.should_update }}
      should_publish: ${{ steps.compare_versions.outputs.should_publish }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Compare versions and set output
        id: compare_versions
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view express-master-controller version)
          if [ "$CURRENT_VERSION" = "$NPM_VERSION" ]; then
            echo "::set-output name=should_update::true"
          else
            echo "::set-output name=should_publish::true"
          fi

  build:
    name: Build
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: rm -rf dist && npm run build

      - name: Create package.json in dist/cjs and dist/esm
        run: |
          echo '{"type": "commonjs"}' > dist/cjs/package.json
          echo '{"type": "module"}' > dist/esm/package.json

      - name: Delete useless dist/src
        run: rm -rf dist/src

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Publish package on NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-version:
    name: Update version
    needs: check-version
    if: needs.check-version.outputs.should_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update version to next patch
        run: |
          git config --global user.email "ijlalahmad845@gmail.com"
          git config --global user.name "Ijlal Ahmad"
          npm version patch

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: version-update
          path: package.json

  create-pr:
    name: Create PR
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get updated version artifact
        uses: actions/download-artifact@v4
        with:
          name: version-update
          path: package.json
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.WORKFLOW_PR_TOKEN }}
          commit-message: Update version to next patch
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          delete-branch: true
          branch: update-version-bot
          title: Update version to next patch
          body: |
            This PR updates the version to the next patch.
            It was automatically created by a GitHub Action.
