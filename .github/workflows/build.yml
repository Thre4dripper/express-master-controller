name: Version Check and Publish

on:
    push:
        branches:
            - main

jobs:
    check-version:
        runs-on: ubuntu-latest
        outputs:
            should_update: ${{ steps.compare_versions.outputs.should_update }}
            should_publish: ${{ steps.compare_versions.outputs.should_publish }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Compare versions and set output
              id: compare_versions
              run: |
                  CURRENT_VERSION=$(node -p "require('./package.json').version")
                  NPM_VERSION=$(npm view express-master-controller version)
                  if [ "$CURRENT_VERSION" = "$NPM_VERSION" ]; then
                    echo "::set-output name=should_update::true"
                  else
                    echo "::set-output name=should_publish::true"
                  fi

    build:
        needs: check-version
        if: needs.check-version.outputs.should_publish == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Build
              run: rm -rf dist && npm run build

            - name: Publish package on NPM
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    update-version:
        needs: check-version
        if: needs.check-version.outputs.should_update == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Update version to next patch
              run: |
                  git config --global user.email "you@example.com"
                  git config --global user.name "Your Name"
                  npm version patch

            - name: Create a pull request
              uses: peter-evans/create-pull-request@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: Update version to next patch
                  delete-branch: true
                  branch: update-version
                  title: Update version to next patch
                  body: |
                      This PR updates the version to the next patch.
                      It was automatically created by a GitHub Action.
