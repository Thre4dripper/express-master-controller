name: Version Check and Publish

#on:
#  release:
#    types:
#      - published

on:
  push:
    branches:
      - main

jobs:
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      should_update: ${{ steps.compare_versions.outputs.should_update }}
      should_publish: ${{ steps.compare_versions.outputs.should_publish }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compare versions and set output
        id: compare_versions
        run: |
          current_version=$(node -p "require('./package.json').version")
          latest_version=$(npm show express-master-controller version)
          should_update=false
          should_publish=false

          if [ "$current_version" != "$latest_version" ]; then
            should_update=true
            should_publish=true
          fi

          echo "::set-output name=should_update::$should_update"
          echo "::set-output name=should_publish::$should_publish"

  build:
    name: Build
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: rm -rf dist && npm run build

      - name: Create package.json in dist/cjs and dist/esm
        run: |
          echo '{"type": "commonjs"}' > dist/cjs/package.json
          echo '{"type": "module"}' > dist/esm/package.json

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            ./**
            !node_modules/**

  publish:
    name: Publish
    needs: build
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: |
            ./**
            !node_modules/**

      - name: Publish package on NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-version:
    name: Update version
    needs: check-version
    if: needs.check-version.outputs.should_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update version to next patch
        run: npm version patch

      - name: Delete node_modules
        run: rm -rf node_modules

      - name: Commit and push version update
        run: |
          git config --global user.name 'Version Bot'
          git config --global user.email 'versionbot@gmail.com'
          git add .
          git commit -m "Update version"
          git push origin HEAD